(()=>{"use strict";var e={9092:(e,t,n)=>{var a={};n.r(a),n.d(a,{BuildAndPush:()=>x,CalleeAndCaller:()=>te,CanalBinlogOutOfSync:()=>P,CreatingImmutableObjects:()=>he,DeferAsyncAndDOMContentloaded:()=>I,DockerfileConfigAnalyse:()=>j,DosCommand:()=>b,ForInAndForOf:()=>_,GridLayout:()=>f,KoaAppContext:()=>G,NginxConfigAnalyse:()=>se,ReactWorkingPrinciple:()=>de,SequelizeCliUse:()=>B,ThisObject:()=>le,UbuntuExpansion:()=>ve,YouDonotKnownViod0:()=>V});var r=n(7294),l=n(3935),o=n(6550),i=n(8045),p=n(9731),s=n(3727);const c=function(){return r.createElement("div",{className:"containter",id:"box"},r.createElement("p",null,"Life is full of joy"),r.createElement("div",{className:"html"},r.createElement("p",null,"HTML Guide"),r.createElement("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web"},r.createElement("span",null,"Web 开发技术索引")),r.createElement("a",{href:"https://html.spec.whatwg.org/multipage/"},r.createElement("span",null,"HTML Living Standard"))),r.createElement("div",{className:"css"},r.createElement("p",null,"CSS Guide"),r.createElement("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference"},r.createElement("span",null,"CSS参考索引")),r.createElement("a",{href:"https://www.sass.hk/guide/"},r.createElement("span",null,"sass/scss中文文档")),r.createElement("a",{href:"https://sass-lang.com/guide"},r.createElement("span",null,"sass/scss英文文档")),r.createElement("a",{href:"https://caniuse.com/"},r.createElement("span",null,"Caniuse")),r.createElement("a",{href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/"},r.createElement("span",null,"A Complete Guide to Flexbox")),r.createElement("a",{href:"https://www.w3cplus.com/CSS3"},r.createElement("span",null,"CSS3的一些技巧"))),r.createElement("div",{className:"javascript"},r.createElement("p",null,"JavaScript Guide"),r.createElement("a",{href:"http://nodejs.cn/api/"},r.createElement("span",null,"Nodejs中文文档")),r.createElement("a",{href:"https://nodejs.org/dist/latest-v12.x/docs/api/"},r.createElement("span",null,"Nodejs英文文档")),r.createElement("a",{href:"https://wangdoc.com/javascript/"},r.createElement("span",null,"JavaScript 教程")),r.createElement("a",{href:"https://es6.ruanyifeng.com/"},r.createElement("span",null,"ES6入门教程")),r.createElement("a",{href:"https://standardjs.com/"},r.createElement("span",null,"JavaScript Standard Style")),r.createElement("a",{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript"},r.createElement("span",null,"速揽回顾JavaScript"))),r.createElement("div",{className:"react"},r.createElement("p",null,"React Guide"),r.createElement("a",{href:"https://zh-hans.reactjs.org/docs/getting-started.html"},r.createElement("span",null,"React文档")),r.createElement("a",{href:"https://material-ui.com/zh/getting-started/installation/"},r.createElement("span",null,"Material-ui文档")),r.createElement("a",{href:"https://reactrouter.com/web/example/basic"},r.createElement("span",null,"React-Router文档")),r.createElement("a",{href:"https://www.taniarascia.com/getting-started-with-react/"},r.createElement("span",null,"React Tutorial: An Overview and Walkthrough")),r.createElement("a",{href:"https://react-hook-form.com/zh/get-started/"},r.createElement("span",null,"react-hook-from")),r.createElement("a",{href:"https://react-select.com/props"},r.createElement("span",null,"react-select")),r.createElement("a",{href:"https://ant.design/components/overview-cn/"},r.createElement("span",null,"antd"))),r.createElement("div",{className:"faq"},r.createElement("p",null,"FAQ Guide"),r.createElement("a",{href:"https://zhuanlan.zhihu.com/p/113216415"},r.createElement("span",null,"写React Hooks前必读")),r.createElement("a",{href:"https://zhuanlan.zhihu.com/p/158672754"},r.createElement("span",null,"我写CSS的常用套路(附demo的效果实现与源码")),r.createElement("a",{href:"https://blog.csdn.net/lucky373125/article/details/80471525?utm_source=app"},r.createElement("span",null,"Swagger从入门到精通")),r.createElement("a",{href:"https://zhuanlan.zhihu.com/p/33374547"},r.createElement("span",null,"柯里化和箭头函数 + React Redux")),r.createElement("a",{href:"https://mp.weixin.qq.com/s/ebFTfZjfyo3SWhYJdC-q-A"},r.createElement("span",null,"Chrome DevTools 面板全攻略")),r.createElement("a",{href:"https://mp.weixin.qq.com/s/Gqfm9X0vrCidc6UQ1hwasA"},r.createElement("span",null,"还分不清 Cookie、Session、Token、JWT？")),r.createElement("a",{href:"https://www.cnblogs.com/tzyy/p/5193811.html"},r.createElement("span",null,"npm package.json属性详解")),r.createElement("a",{href:"https://www.sitepoint.com/node-js-interview-questions/"},r.createElement("span",null,"sitepoint")),r.createElement("a",{href:"https://mp.weixin.qq.com/s/ne6s4PNhnqHDo1PietsJWw"},r.createElement("span",null,"Docker 从入门到实践")),r.createElement("a",{href:"https://www.juejin.im/post/6874968805542461453"},r.createElement("span",null,"webpack 基础配置到性能提升"))),r.createElement("div",{className:"palette"},r.createElement("p",null,"Palette 调色板"),r.createElement("a",{href:"https://flatuicolors.com/"},r.createElement("span",null,"Palettes")),r.createElement("a",{href:"https://www.materialpalette.com/"},r.createElement("span",null,"material design palette"))),r.createElement("div",{className:"other"},r.createElement("p",null,"Other Guide"),r.createElement("a",{href:"https://www.w3school.com.cn/media/media_mimeref.asp"},r.createElement("span",null,"MIME手册")),r.createElement("a",{href:"https://www.docschina.org/"},r.createElement("span",null,"印记中文官网")),r.createElement("a",{href:"https://www.iconfont.cn/"},r.createElement("span",null,"阿里巴巴矢量图标")),r.createElement("a",{href:"https://picsum.photos/"},r.createElement("span",null,"一个可以获得随机图片的网站")),r.createElement("a",{href:"https://www.liaoxuefeng.com/"},r.createElement("span",null,"廖雪峰官网")),r.createElement("a",{href:"https://cn.vuejs.org/v2/guide/syntax.html"},r.createElement("span",null,"Vuejs中文文档")),r.createElement("a",{href:"https://www.sequelize.com.cn/"},r.createElement("span",null,"sequelize中文文档"))),r.createElement("div",null,r.createElement("p",null,"Good Tools"),r.createElement("a",{href:"https://the-x.cn/"},r.createElement("span",null,"各种加密解密工具"))),r.createElement("div",null,r.createElement(s.rU,{to:"/blogs"},r.createElement("span",null,"More..."))))};var m=n(3905);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var k={};function f(e){var t=e.components,n=d(e,["components"]);return(0,m.kt)("wrapper",u({},k,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"网格布局（grid）"),(0,m.kt)("h2",null,"1、grid布局的属性分类"),(0,m.kt)("p",null,"1、定义在容器上面的称为容器属性；"),(0,m.kt)("p",null,"2、定义在项目上面的称为项目属性；"),(0,m.kt)("pre",null,(0,m.kt)("code",u({parentName:"pre"},{className:"language-html"}),'<div class="container">\x3c!-- 这是容器，容器下面直接子元素就是项目 --\x3e\n  <div class="items" style=\'background: hsla(100, 100%, 50%, 0.5);\'><p>1</p></div>\n  <div class="items" style=\'background: hsla(30, 100%, 50%, 0.5);\'><p>2</p></div>\n  <div class="items"style=\'background: hsla(60, 100%, 50%, 0.5);\'><p>3</p></div>\n  <div class="items"style=\'background: hsla(150, 100%, 50%, 0.5);\'><p>4</p></div>\n  <div class="items"style=\'background: hsla(200, 100%, 50%, 0.5);\'><p>5</p></div>\n  <div class="items"style=\'background: hsla(260, 100%, 50%, 0.5);\'><p>6</p></div>\n</div>\n')),(0,m.kt)("pre",null,(0,m.kt)("code",u({parentName:"pre"},{className:"language-css"}),".container{\n    /*激活grid*/\n    display: grid;/*或者inline-grid*/\n    /*\n        注意，设为网格布局以后，容器子元素（项目）的float、display: inline-block、display: table-           cell、vertical-align和column-*等设置都将失效。\n    */\n    /*划分行和列。以下为3 x 3*/\n    grid-template-columns: 100px 100px 100px;/*划分成三行三列。也可以使用百分比：（33.33% 33.33% 33.33%） *//*定义对应的那列宽*/\n    grid-template-rows: 100px 100px 100px;/*定义对应的那行高*/\n    \n    /*使用repeat()*/\n    /*\n    grid-template-columns: repeat(3, 33.33%); \n        repeat()接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。\n        repeat()重复某种模式也是可以的。如：\n    grid-template-columns: repeat(2, 100px 20px 80px);。\n    */\n}\n")),(0,m.kt)("h4",null,"2、grid-template-columns和grid-template-rows"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},"repeat()")," 接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},"auto-fill"),"  如 ",(0,m.kt)("inlineCode",{parentName:"p"},"repeat(auto-fill, 100px);"),"表示每列宽度",(0,m.kt)("inlineCode",{parentName:"p"},"100px"),"，然后自动填充，直到容器不能放置更多的列。")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},'fr (fraction 的缩写，意为"片段")'),"  如 ",(0,m.kt)("inlineCode",{parentName:"p"},"grid-template-columns: 1fr 2fr;")," 如果两列的宽度分别为",(0,m.kt)("inlineCode",{parentName:"p"},"1fr"),"和",(0,m.kt)("inlineCode",{parentName:"p"},"2fr"),"，就表示后者是前者的两倍。",(0,m.kt)("inlineCode",{parentName:"p"},"fr"),"可以与绝对长度的单位结合使用，这时会非常方便。如：",(0,m.kt)("inlineCode",{parentName:"p"},"grid-template-columns: 150px 1fr 2fr;")," ")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},"minmax()")," ",(0,m.kt)("inlineCode",{parentName:"p"},"minmax()"),"函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。如：",(0,m.kt)("inlineCode",{parentName:"p"},"grid-template-columns: 1fr 1fr minmax(100px, 1fr);"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},"auto")," 表示有浏览器决定自己决定。 ",(0,m.kt)("inlineCode",{parentName:"p"}," grid-template-columns: 100px auto 100px;")," ")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"网格线的名称")," 可以使用方括号，指定每一根网格线的名字。如："),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",u({parentName:"pre"},{className:"language-css"}),"  grid-template-columns: [c1] 100px [c2] 100px [c3] auto [c4];\n  grid-template-rows: [r1] 100px [r2] 100px [r3] auto [r4];\n")))),(0,m.kt)("h4",null,"3、grid-row-gap、grid-column-gap和grid-gap"),(0,m.kt)("p",null,"1、",(0,m.kt)("inlineCode",{parentName:"p"},"grid-row-gap"),"属性设置行与行的间隔（行间距），",(0,m.kt)("inlineCode",{parentName:"p"},"grid-column-gap"),"属性设置列与列的间隔（列间距）。\t",(0,m.kt)("inlineCode",{parentName:"p"},"grid-gap: <grid-row-gap> <grid-column-gap>"),";"))}function N(){return(N=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function h(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}f.isMDXComponent=!0;var g={};function b(e){var t=e.components,n=h(e,["components"]);return(0,m.kt)("wrapper",N({},g,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"windows 停止被占用的端口"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"查找被占用的端口进程号(PID)"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",N({parentName:"pre"},{className:"language-bash"}),"netstat -ano | findstr 3000\n"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"杀死进程"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",N({parentName:"pre"},{className:"language-bash"}),"taskkill /F /PID+对应的进程号\n")))),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"查看taskkill帮助 ",(0,m.kt)("inlineCode",{parentName:"li"},"TASKKILL /?")," (不区分大小写)")))}function y(){return(y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function v(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}b.isMDXComponent=!0;var O={};function x(e){var t=e.components,n=v(e,["components"]);return(0,m.kt)("wrapper",y({},O,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"打包到仓库（Docker Hub)"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"登录",(0,m.kt)("inlineCode",{parentName:"p"},"docker")," ：",(0,m.kt)("inlineCode",{parentName:"p"},"docker login --username=<your docker username> --password=<your docker password>")," "),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",y({parentName:"pre"},{className:"language-bash"}),"$ sudo docker login --username=<your docker username> --password=<your docker password>\n\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n")))),(0,m.kt)("ol",{start:2},(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"构建: ",(0,m.kt)("inlineCode",{parentName:"p"},"docker build -t <your docker username>/<your project name> .")," "),(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},"<your docker username>/<your project name>")," : 将会决定",(0,m.kt)("inlineCode",{parentName:"p"},"image")," 名，后面的",(0,m.kt)("inlineCode",{parentName:"p"},"<your project name>")," 可以随便写一个希望的名字，当然，规范最重要"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",y({parentName:"pre"},{className:"language-bash"}),'$ sudo docker build -t isrookie/charts . #注意最后的"."\n\nSending build context to Docker daemon  789.5kB\nStep 1/6 : FROM node:latest\n ---\x3e 5377c9a2fb1f\nStep 2/6 : COPY . /charts\n.....\n')))),(0,m.kt)("ol",{start:3},(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"推送到 ",(0,m.kt)("inlineCode",{parentName:"p"},"docker hub")," : ",(0,m.kt)("inlineCode",{parentName:"p"},"docker push <your docker username>/<your project name>")," "),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",y({parentName:"pre"},{className:"language-bash"}),"$ sudo docker push isrookie/charts\n\nThe push refers to repository [docker.io/isrookie/charts]\n24a17a00f04b: Pushed \n84881e66b2b3: Pushed \n58f2725fb7a2: Mounted from library/node \n28ec43ff7499: Mounted from library/node \n....\n")))))}function C(){return(C=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function E(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}x.isMDXComponent=!0;var w={};function j(e){var t=e.components,n=E(e,["components"]);return(0,m.kt)("wrapper",C({},w,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"Dockerfile简单配置分析"),(0,m.kt)("p",null,"约定命令都是采用大写形式"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"FROM"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"FROM <baseImage>"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"<baseImage>")," 为要使用的镜像名"),(0,m.kt)("li",{parentName:"ul"},"会先从本地查找镜像，若没有找到，将会从公共仓库中拉取。"),(0,m.kt)("li",{parentName:"ul"},"初始化一个新的构建阶段，并为后续指令设置基本镜像。 "),(0,m.kt)("li",{parentName:"ul"},"每个阶段需要从FROM开始，直到遇见下一个FROM或者命令结束"))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"COPY"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"COPY <src> <dest> "),"  \tCopy new files and directories to the image's filesystem.",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"<src> ")," 等待被复制的文件或者目录"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"<dest>")," 要接收复制内容的镜像系统的目录"))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"WORKDIR "),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},"WORKDIR </the/workdir/path>")," "),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"The absolute or relative path to use as the working directory. Will be created if it does not exist."),(0,m.kt)("p",{parentName:"li"},"使用绝对路径或者相对路径作为工作目录，如果不存在将会被创造。"),(0,m.kt)("p",{parentName:"li"},"Set the working directory for any ADD, COPY, CMD, ENTRYPOINT, or RUN instructions that follow."),(0,m.kt)("p",{parentName:"li"},"设置的工作目录可以是任何通过",(0,m.kt)("inlineCode",{parentName:"p"},"ADD")," , ",(0,m.kt)("inlineCode",{parentName:"p"},"COPY")," , ",(0,m.kt)("inlineCode",{parentName:"p"},"CMD")," , ",(0,m.kt)("inlineCode",{parentName:"p"},"ENTRYPOINT")," 或者 ",(0,m.kt)("inlineCode",{parentName:"p"},"RUN")," 生成的目录")))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"RUN"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"RUN <command> <parameter>"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"<command>")," 要执行的命令，例如",(0,m.kt)("inlineCode",{parentName:"li"},"npm")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"<parameter>")," 需要的参数， 例如",(0,m.kt)("inlineCode",{parentName:"li"},"install")," ,两个连起来就是 ",(0,m.kt)("inlineCode",{parentName:"li"},"npm install")))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"EXPOSE"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"EXPOSE <port>"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"<port>")," 这个容器在 runtime 时， 默认将要被监听的端口， 可以设置多个，用空格分隔"))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"CMD"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("inlineCode",{parentName:"p"},'CMD [ "executable", "parameter", ... ]')),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"Set the default executable and parameters for this executing container."),(0,m.kt)("p",{parentName:"li"},"设置这个容器默认执行的命令和参数")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"一个",(0,m.kt)("inlineCode",{parentName:"p"},"FROM")," 只能包含一个 ",(0,m.kt)("inlineCode",{parentName:"p"},"CMD")," ，如果例举多个，只会执行最后一个")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"The main purpose of a ",(0,m.kt)("inlineCode",{parentName:"strong"},"CMD")," is to provide defaults for an executing container.")," "),(0,m.kt)("p",{parentName:"li"},"CMD的主要目的是为执行容器提供默认值")))))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"ENV 和 ARG"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"ENV")," 将会在容器整个运行阶段都存在"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"ARG")," 只会在构建是存在")))),(0,m.kt)("pre",null,(0,m.kt)("code",C({parentName:"pre"},{className:"language-dockerfile"}),'FROM node:latest        #pull 镜像\nARG number              #声明一个参数\nCOPY . /charts/         #复制新的内容到容器指定目录\nWORKDIR /charts         #容器运行时的工作目录\nRUN npm install         #构建时要执行的命令\nEXPOSE 3000             #容器向外暴露的端口\nCMD ["npm", "start"]    #CMD的主要目的是为执行容器提供默认值\n')),(0,m.kt)("h2",null,"参考"),(0,m.kt)("p",null,"[1][Dockerfile reference]","(",(0,m.kt)("a",C({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/#from"}),"https://docs.docker.com/engine/reference/builder/#from"),")"),(0,m.kt)("p",null,"[2][如何高效查看 Docker 日志]","(",(0,m.kt)("a",C({parentName:"p"},{href:"https://www.cnblogs.com/yangxiayi1987/p/11818184.html"}),"https://www.cnblogs.com/yangxiayi1987/p/11818184.html"),")"),(0,m.kt)("p",null,"[3][docker-compose.yml 配置文件编写详解]","(",(0,m.kt)("a",C({parentName:"p"},{href:"https://blog.csdn.net/qq_36148847/article/details/79427878"}),"https://blog.csdn.net/qq_36148847/article/details/79427878"),")"),(0,m.kt)("p",null,"[4][Dockerfile详解超全]","(",(0,m.kt)("a",C({parentName:"p"},{href:"https://blog.csdn.net/atlansi/article/details/87892016"}),"https://blog.csdn.net/atlansi/article/details/87892016"),")"))}function S(){return(S=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function D(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}j.isMDXComponent=!0;var M={};function P(e){var t=e.components,n=D(e,["components"]);return(0,m.kt)("wrapper",S({},M,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"canal的binlog.id与mysql的binlog.id不一致的问题"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"引起问题原因："),(0,m.kt)("p",{parentName:"li"},"通常，当要修改官网上某些可能会出很大意外的情况下，通常都会先选择备份，然后出意外好回退回去，防止出现巨大损失。而我采用是粗暴方式：备份快照，然后直接回退到某个节点。由于粗暴的原因，导致了mysql的配置意外的被重置了（应该是重置了，之前配置信息没有看到），待重新配置后，就导致了两个binlog.id不一致，数据不能同步，导致新注册用户无法登陆云服务器。")),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"解决方法："),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"首先进入docker内部 ",(0,m.kt)("inlineCode",{parentName:"li"},"docker exec -it <container name> bash")," "),(0,m.kt)("li",{parentName:"ul"},"canal的内部日志在explame目录下，可以查看日志信息，判断出错内容"),(0,m.kt)("li",{parentName:"ul"},"其实只需要删除",(0,m.kt)("inlineCode",{parentName:"li"},"path/conf/example")," 下面的",(0,m.kt)("inlineCode",{parentName:"li"},"meta.dat"),"  ,重启canal镜像 (meta.dat 应该是记录怎么连接上mysql的信息)"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"总结"))),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"进入docker镜像内部: ",(0,m.kt)("inlineCode",{parentName:"p"},"docker exec -it <container name> bash")," , ",(0,m.kt)("inlineCode",{parentName:"p"},"exit")," 退出")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"也可以使用",(0,m.kt)("inlineCode",{parentName:"p"},"docker cp <container name>:/home/admin/canal .")," 复制到本地"))),(0,m.kt)("ol",{start:4},(0,m.kt)("li",{parentName:"ol"},"参考文献")),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("a",S({parentName:"p"},{href:"https://blog.csdn.net/tiger1334/article/details/93468736"}),"docker 进入容器内部及退出"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("a",S({parentName:"p"},{href:"https://blog.csdn.net/technology01/article/details/95360966"}),"Canal数据库同步组件")," 以下是截取内容 --- ",(0,m.kt)("a",S({parentName:"p"},{href:"https://www.iteye.com/blog/shift-alt-ctrl-2399603"}),"原文")))),(0,m.kt)("pre",null,(0,m.kt)("code",S({parentName:"pre"},{}),' 9、Canal如何重置消费的position？\n\n    答：比如当消费者在消费binlog时，数据异常，需要回溯到旧的position重新消费，是这个场景！\n\n    1）我们首先确保，你需要回溯的position所对应的binlog文件仍然存在，可以通过需要回溯的时间点来确定position和binlog文件名，这一点可以通过DBA来确认。\n\n    2）关闭消费者，否则重置位点操作无法生效。（你可以在关闭消费者之前执行unsubscribe，来删除ZK中历史位点的信息）\n\n    3）关闭Canal集群，修改对应的destination下的配置文件中的“canal.instance.master.journal.name = <此position对应的binlog名称>”、“canal.instance.master.position = <此position>”；可以只需要修改一台。\n\n    4）删除zk中此destination的消费者meta信息，“${destination}/1001"此path下所有的子节点，以及“1001”节点。（可以通过消费者执行unsubscribe来实现）\n\n    5）重启2）中的此canal节点，观察日志。\n\n    6）重启消费者。\n')))}function T(){return(T=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function q(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}P.isMDXComponent=!0;var L={};function I(e){var t=e.components,n=q(e,["components"]);return(0,m.kt)("wrapper",T({},L,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"defer, async和DOMContentLoaded"),(0,m.kt)("h2",null,"defer",(0,m.kt)("sup",null,"[1]")),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"它的作用是延迟脚本的执行，等到 DOM 加载生成后，再执行脚本"),(0,m.kt)("li",{parentName:"ul"},"下载外部脚本，与解析HTML网页同时进行"),(0,m.kt)("li",{parentName:"ul"},"添加了该属性的",(0,m.kt)("inlineCode",{parentName:"li"},"script"),"标签，下载的脚本文件将会在DOMContentLoaded事件触发前执行（即刚刚读取完",(0,m.kt)("inlineCode",{parentName:"li"},"</html>")," 标签），而且",(0,m.kt)("strong",{parentName:"li"},"可以保证按页面中",(0,m.kt)("inlineCode",{parentName:"strong"},"script")," 标签出现的顺序执行"),"。")),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"注： 不过在实际当中，推迟执行的脚本不一定总会按顺序执行或者在 DOMContentLoaded 事件之前执行，因此最好只包含一个这样的脚本")," "),(0,m.kt)("h2",null,"async",(0,m.kt)("sup",null,"[2]")),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"异步下载外部脚本，解决“阻塞效应”")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"脚本下载完成，浏览器暂停解析HTML页面，执行下载完成的脚本")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"脚本执行完毕，浏览器继续解析HTML页面")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},(0,m.kt)("strong",{parentName:"p"},"保证在页面的load事件前执行，但不能保证在DOMContextLoaded事件之后还是之前执行")))),(0,m.kt)("p",null,(0,m.kt)("strong",{parentName:"p"},"注：该属性无法保证脚本执行顺序，最好该异步脚本不应该在加载期间修改 DOM")),(0,m.kt)("h2",null,"DOMContentLoaded事件"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"DOMContentLoaded")," 事件只有在DOM结构生成之后才会触发")),(0,m.kt)("h2",null,"执行顺序"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"添加了",(0,m.kt)("inlineCode",{parentName:"p"},"async")," 属性的，会在脚本加载完成后就立即执行脚本，可能在",(0,m.kt)("inlineCode",{parentName:"p"},"DOMContentLoaded")," 事件之前，也可能在之后；")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"添加 了",(0,m.kt)("inlineCode",{parentName:"p"},"defer")," 属性的，会在",(0,m.kt)("inlineCode",{parentName:"p"},"DOMContentLoaded")," 事件之前执行脚本"))),(0,m.kt)("h2",null,"参考"),(0,m.kt)("p",null,"[1][derfer属性]","(",(0,m.kt)("a",T({parentName:"p"},{href:"https://wangdoc.com/javascript/bom/engine.html#defer-%E5%B1%9E%E6%80%A7"}),"https://wangdoc.com/javascript/bom/engine.html#defer-%E5%B1%9E%E6%80%A7"),") "),(0,m.kt)("p",null,"[2][async属性]","(",(0,m.kt)("a",T({parentName:"p"},{href:"https://wangdoc.com/javascript/bom/engine.html#async-%E5%B1%9E%E6%80%A7"}),"https://wangdoc.com/javascript/bom/engine.html#async-%E5%B1%9E%E6%80%A7"),")"))}function z(){return(z=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function A(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}I.isMDXComponent=!0;var R={};function _(e){var t=e.components,n=A(e,["components"]);return(0,m.kt)("wrapper",z({},R,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"for-in 和 for-of"),(0,m.kt)("p",null,(0,m.kt)("inlineCode",{parentName:"p"},"for-in")," 用于枚举对象中的非符号键属性"),(0,m.kt)("pre",null,(0,m.kt)("code",z({parentName:"pre"},{className:"language-js"}),"for (const el in [2,3,4,5]) {\n    console.log(el)\n}\n//0\n//1\n//2\n//3\n//打印的是数组的键\n")),(0,m.kt)("p",null,(0,m.kt)("inlineCode",{parentName:"p"},"for-of")," 用于遍历可迭代对象的元素"),(0,m.kt)("pre",null,(0,m.kt)("code",z({parentName:"pre"},{className:"language-js"}),"for (const el of [2,3,4,5]) {\n    console.log(el)\n}\n//2\n//3\n//4\n//5\n//打印的是数组元素\n")))}function X(){return(X=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function F(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}_.isMDXComponent=!0;var U={};function G(e){var t=e.components,n=F(e,["components"]);return(0,m.kt)("wrapper",X({},U,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"koa2 app.context"),(0,m.kt)("p",null,"当在使用",(0,m.kt)("inlineCode",{parentName:"p"},"koa2"),"框架时，好奇为什么通过 ",(0,m.kt)("inlineCode",{parentName:"p"},"app.context.xxx")," 添加的属性可以通过",(0,m.kt)("inlineCode",{parentName:"p"},"ctx.xxx")," 调用，于是乎看了下相关源码"),(0,m.kt)("hr",null),(0,m.kt)("p",null,"在",(0,m.kt)("inlineCode",{parentName:"p"},"application.js"),"文件中，看到了构造函数中初始化部分代码如下："),(0,m.kt)("pre",null,(0,m.kt)("code",X({parentName:"pre"},{className:"language-js"}),"this.middleware = [];//用来存储中间件，也就是洋葱模型的核心\nthis.context = Object.create(context);//实例化this.context对象\nthis.request = Object.create(request);//实例化this.request对象\nthis.response = Object.create(response);//实例化this.response对象\n")),(0,m.kt)("p",null,(0,m.kt)("inlineCode",{parentName:"p"},"this.context = Object.create(context);")," 通过",(0,m.kt)("inlineCode",{parentName:"p"},"Object.create")," 实例化一个对象",(0,m.kt)("inlineCode",{parentName:"p"},"this.context")," ，这个对象将会继承",(0,m.kt)("inlineCode",{parentName:"p"},"context")," 对象的所有属性和方法。通过",(0,m.kt)("inlineCode",{parentName:"p"},"Object.create")," 方法新创建的",(0,m.kt)("inlineCode",{parentName:"p"},"this.context")," 是一个空对象",(0,m.kt)("inlineCode",{parentName:"p"},"{}"),"；"),(0,m.kt)("pre",null,(0,m.kt)("code",X({parentName:"pre"},{className:"language-js"})," createContext(req, res) {\n   const context = Object.create(this.context);\n   const request = context.request = Object.create(this.request);\n   const response = context.response = Object.create(this.response);\n   context.app = request.app = response.app = this;\n   context.req = request.req = response.req = req;\n   context.res = request.res = response.res = res;\n   request.ctx = response.ctx = context;\n   request.response = response;\n   response.request = request;\n   context.originalUrl = request.originalUrl = req.url;\n   context.state = {};\n   return context;\n }\n")),(0,m.kt)("p",null,"继续往下查看，可以看到一个 ",(0,m.kt)("inlineCode",{parentName:"p"},"createContext")," 方法，该方法中第一条语句 ",(0,m.kt)("inlineCode",{parentName:"p"},"const context = Object.create(this.context);"),"  也就是说当我们通过",(0,m.kt)("inlineCode",{parentName:"p"},"app.context.xxx")," 添加某个属性时，由于通过",(0,m.kt)("inlineCode",{parentName:"p"},"Object.create(this.context)")," 继承了添加在",(0,m.kt)("inlineCode",{parentName:"p"},"app.context")," 对象上的属性，因此可以通过",(0,m.kt)("inlineCode",{parentName:"p"},"ctx.xxx")," 直接调用。"),(0,m.kt)("h2",null,"补充"),(0,m.kt)("p",null,(0,m.kt)("inlineCode",{parentName:"p"},"Object.create")," 该方法接受一个对象作为参数，然后以它为原型，返回一个实例对象。该实例完全继承原型对象的属性。"),(0,m.kt)("pre",null,(0,m.kt)("code",X({parentName:"pre"},{className:"language-js"}),'const obj1 = {obj1: \'test\'};\nconst inherit = Object.create(obj1);\n\nconsole.log(obj1);//{obj1: "test"}\nconsole.log(inherit);//{}\nconsole.log(inherit.obj1);//test\nconsole.log(inherit.obj1 === obj1.obj1);//true\nObject.getPrototypeOf(inherit) === obj1;//true\n\nobj1.o = [1,2,3];\nconsole.log(obj1);//{obj1: "test", o: [1, 2, 3]}\nconsole.log(inherit.o);// [1, 2, 3]\n')))}function W(){return(W=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function J(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}G.isMDXComponent=!0;var H={};function B(e){var t=e.components,n=J(e,["components"]);return(0,m.kt)("wrapper",W({},H,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"Sequelize CLI"),(0,m.kt)("h2",null,"初始化"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"初始化： ",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli init"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"设计表： ",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli migration:generate --name migration-skeleton")," "))),(0,m.kt)("pre",null,(0,m.kt)("code",W({parentName:"pre"},{className:"language-js"}),"//migrations 文件夹\nmodule.exports = {\n  up: (queryInterface, Sequelize) => {\n    return queryInterface.createTable('Person', {\n      name: Sequelize.DataTypes.STRING,\n      isBetaMember: {\n        type: Sequelize.DataTypes.BOOLEAN,\n        defaultValue: false,\n        allowNull: false\n      }\n    });\n  },\n  down: (queryInterface, Sequelize) => {\n    return queryInterface.dropTable('Person');\n  }\n};\n")),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"创建数据库：",(0,m.kt)("inlineCode",{parentName:"li"},"npx sequelize-cli db:create")," ")),(0,m.kt)("h2",null,"表操作"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"创建表： ",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:migrate")," ")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"删除表： ",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:migrate:undo"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"一次性删除所有表：",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:migrate:undo:all"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"删除数据库： ",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:drop")))),(0,m.kt)("h2",null,"数据操作"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"添加数据：",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli seed:generate --name demo-user")),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",W({parentName:"pre"},{className:"language-js"}),"module.exports = {\n  up: (queryInterface, Sequelize) => {\n    return queryInterface.bulkInsert('Users', [{\n      firstName: 'John',\n      lastName: 'Doe',\n      email: 'example@example.com',\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }]);\n  },\n  down: (queryInterface, Sequelize) => {\n    return queryInterface.bulkDelete('Users', null, {});\n  }\n};\n")))),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"创建数据：",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:seed:all")," ")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"删除数据：",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:seed:undo")," ")),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"删除特定操作：",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:seed:undo --seed name-of-seed-as-in-data"))),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"删除所有数据：",(0,m.kt)("inlineCode",{parentName:"p"},"npx sequelize-cli db:seed:undo:all")))))}function Y(){return(Y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function Z(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}B.isMDXComponent=!0;var K={};function V(e){var t=e.components,n=Z(e,["components"]);return(0,m.kt)("wrapper",Y({},K,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"你不知道的void 0"),(0,m.kt)("p",null,"当在看antd编译后的js代码时，看到一段代码："),(0,m.kt)("pre",null,(0,m.kt)("code",Y({parentName:"pre"},{className:"language-js"}),'exports["default"] = void 0;\n')),(0,m.kt)("p",null,"然后在console中输入后："),(0,m.kt)("pre",null,(0,m.kt)("code",Y({parentName:"pre"},{className:"language-js"}),"void 0;\n//undefined\n")),(0,m.kt)("p",null,"返回的是",(0,m.kt)("inlineCode",{parentName:"p"},"undefined")," ,由此可见这应该是将其初始化为",(0,m.kt)("inlineCode",{parentName:"p"},"undefined")," , 然而为什么不直接用",(0,m.kt)("inlineCode",{parentName:"p"},"undefined")," 而是通过",(0,m.kt)("inlineCode",{parentName:"p"},"void 0")," , 查询了别个的博客后了解到，原来，",(0,m.kt)("inlineCode",{parentName:"p"},"undefined")," 是可以重写的，虽然在ES5中已经被禁止作为全局对象时的这种行为，但是在局部作用域中",(0,m.kt)("inlineCode",{parentName:"p"},"undefined")," 仍然是可以重写的"),(0,m.kt)("pre",null,(0,m.kt)("code",Y({parentName:"pre"},{className:"language-js"}),"(function() {\n    const undefined = 10;\n    \n    alert(undefined);\n}());\n\n(function() {\n    undefined = 10;\n    \n    alert(undefined);\n}());\n")),(0,m.kt)("p",null,"为什么选择void 0 作为undefined的替代："),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"void 0 是表达式中最短的。用 void 0 代替 undefined 能节省字节。")),(0,m.kt)("h2",null,"参考"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("a",Y({parentName:"li"},{href:"https://blog.csdn.net/juzipchy/article/details/86367565"}),"void 0 与 undefined的区别"))))}function $(){return($=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function Q(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}V.isMDXComponent=!0;var ee={};function te(e){var t=e.components,n=Q(e,["components"]);return(0,m.kt)("wrapper",$({},ee,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"arguments.callee 和 fn.caller"),(0,m.kt)("h2",null,"arguments.callee"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("p",{parentName:"li"},"指向",(0,m.kt)("inlineCode",{parentName:"p"},"arguments"),"对象",(0,m.kt)("strong",{parentName:"p"},"所在的函数"),"的指针。可以让函数解耦"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",$({parentName:"pre"},{className:"language-js"}),"//阶乘函数\nfunction factorial(num) {\n    if (num <= 1) {\n        return 1;\n    } else {\n        return num * arguments.callee(num - 1);//解耦。即，即使将当前函数赋值给另外的变量，也能保证该函数正常执行\n    }\n}\n//赋值给另一个变量\nlet trueFactorial = factorial;\n\n//指向另一个函数\nfactorial = function () {\n    return 0;\n}\n\ntrueFactorial(5);//解耦成功。依然正常执行\n")))),(0,m.kt)("h2",null,"fn.caller"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"指向",(0,m.kt)("strong",{parentName:"li"},"调用当前函数的函数"),"的指针，或者如果是在全局作用域中调用的则为 null")),(0,m.kt)("pre",null,(0,m.kt)("code",$({parentName:"pre"},{className:"language-js"}),"function outer() {\n    inner();\n}\n\nfunction inner() {\n    console.log(inner.caller)//打印outer函数 //等价于console.log(arguments.callee.caller);//降低耦合度 // 在严格模式下访问arguments.callee报错\n}\n\nouter();\n")))}function ne(){return(ne=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function ae(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}te.isMDXComponent=!0;var re={};function le(e){var t=e.components,n=ae(e,["components"]);return(0,m.kt)("wrapper",ne({},re,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"this对象"),(0,m.kt)("p",null,(0,m.kt)("inlineCode",{parentName:"p"},"this")," 对象在标准函数和箭头函数中有不同行为"),(0,m.kt)("h2",null,"标准函数中的this"),(0,m.kt)("p",null,"在标准函数中，",(0,m.kt)("inlineCode",{parentName:"p"},"this")," 引用的是",(0,m.kt)("strong",{parentName:"p"},"把函数当成方法调用的上下文对象")," "),(0,m.kt)("h2",null,"箭头函数中的this"),(0,m.kt)("p",null,"在箭头函数中，",(0,m.kt)("inlineCode",{parentName:"p"},"this")," 引用的是",(0,m.kt)("strong",{parentName:"p"},"定义箭头函数所在的上下文对象")," "))}function oe(){return(oe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function ie(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}le.isMDXComponent=!0;var pe={};function se(e){var t=e.components,n=ie(e,["components"]);return(0,m.kt)("wrapper",oe({},pe,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"nginx配置文件组成"),(0,m.kt)("ol",null,(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"全局快"),(0,m.kt)("p",{parentName:"li"},"从配置文件开始到",(0,m.kt)("inlineCode",{parentName:"p"},"events")," 块之间，主要是设置一些影响 Nginx 服务器整体运行的配置指令。"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"worker_processes")," 并发处理服务的配置，值越大，可以支持的并发处理量越多，但是会受到硬件、软件等设备的制约"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"events 块"),(0,m.kt)("p",{parentName:"li"},"影响 Nginx 服务器与用户的网络连接，常用的设置包括是否开启对多 workprocess 下的网络连接进行序列化，是否允许同时接收多个网络连接等等。"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",oe({parentName:"pre"},{className:"language-nginx"}),"#支持的最大连接数：\nevents {\n    worker_connections  1024;\n}\n"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"HTTP 块"),(0,m.kt)("p",{parentName:"li"},"在此配置反向代理和负载均衡。"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",oe({parentName:"pre"},{className:"language-nginx"}),"location [ = | ~ | ~* | ^~] url {\n\n}\n")),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("inlineCode",{parentName:"li"},"location")," 说明，该语法用来匹配 ",(0,m.kt)("inlineCode",{parentName:"li"},"url")," , 语法如下：",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"=:")," 用于不含正则表达式的 url 前，要求字符串与 url 严格匹配，匹配成功就停止向下搜索并处理请求。"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"~："),"用于表示 url 包含正则表达式，并且区分大小写。"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"~","*","："),"用于表示 url 包含正则表达式，并且不区分大小写。"),(0,m.kt)("li",{parentName:"ul"},(0,m.kt)("strong",{parentName:"li"},"^~："),"用于不含正则表达式的 url 前，要求 Nginx 服务器找到表示 url 和字符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再匹配。"),(0,m.kt)("li",{parentName:"ul"},"如果有 url 包含正则表达式，不需要有 ~ 开头标识。")))),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",oe({parentName:"pre"},{className:"language-nginx"}),"#例如，在浏览器地址栏输出www.example.com，需要跳转到Linux系统本地地址http://127.0.0.1:8080\n\nserver {\n    listen 80; #监听端口\n    server_name www.example.com 192.168.1.123; #绑定访问的域名，也可以是ip地址\n    \n    location / {\n        root html; #服务器响应内容起始目录，一般默认以index.html作为响应起点\n        proxy_pass http://127.0.0.1:8080; #代理到本地地址\n        index index.html index.htm;#响应起始内容\n    }\n    location /user/ { #正则匹配\n        root html;\n        proxy_pass http://127.0.0.1:8000;\n        index index.html index.htm;\n    }\n    location /user {#不是正则，使用的url\n        ....\n    }\n}\n"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"负载均衡"),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",oe({parentName:"pre"},{className:"language-nginx"}),"stream {\n    upstream myserver {\n        server 192.168.1.123:8080;\n        #fair; #放在这里\n    }\n}\nserver {\n    listen 80; #监听端口\n    server_name www.example.com 192.168.1.123; #绑定访问的域名，也可以是ip地址\n    \n    location / {\n        root html; #服务器响应内容起始目录，一般默认以index.html作为响应起点\n        proxy_pass http://myserver; #代理到负载均衡配置的地址\n        index index.html index.htm;#响应起始内容\n    }\n}\n\n")),(0,m.kt)("p",{parentName:"li"},"负载均衡方式如下："),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"轮询（默认）。"),(0,m.kt)("li",{parentName:"ul"},"weight, 代表权重，权越高优先级越高。"),(0,m.kt)("li",{parentName:"ul"},"fair，按后端服务器的响应时间来分配请求，相应时间短的优先分配。"),(0,m.kt)("li",{parentName:"ul"},"ip_hash, 每个请求按照访问 ip 的 hash 结果分配，这样每一个访客固定的访问一个后端服务器，可以解决 Session 的问题。"))),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"动静分离"),(0,m.kt)("p",{parentName:"li"},"什么是动静分离？把动态请求和静态请求分开，不是讲动态页面和静态页面物理分离，可以理解为 Nginx 处理静态页面，Tomcat 处理动态页面。"),(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"动静分离大致分为两种：",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"纯粹将静态文件独立成单独域名放在独立的服务器上，也是目前主流方案。"),(0,m.kt)("li",{parentName:"ul"},"将动态跟静态文件混合在一起发布，通过nginx分开")))),(0,m.kt)("pre",{parentName:"li"},(0,m.kt)("code",oe({parentName:"pre"},{className:"language-nginx"}),"server {\n    listen 80; #监听端口\n    server_name www.example.com 192.168.1.123; #绑定访问的域名，也可以是ip地址\n    #root 后面的路径就是从/跟目录开始的\n    location /www/ {\n        root /data/;\n        index index.html index.htm;#响应起始内容\n    }\n    location /image/ {\n        root /data/;\n        autoindex on;\n    }\n}\n")),(0,m.kt)("ol",oe({parentName:"li"},{start:6}),(0,m.kt)("li",{parentName:"ol"},(0,m.kt)("p",{parentName:"li"},"nginx 高可用"),(0,m.kt)("p",{parentName:"li"},".........."))))),(0,m.kt)("hr",null),(0,m.kt)("h2",null,"参考文献"),(0,m.kt)("p",null,"[1][就是要让你搞懂Nginx，这篇就够了！]","(",(0,m.kt)("a",oe({parentName:"p"},{href:"https://mp.weixin.qq.com/s/0IkKgthJdnC_UorZGS5Z0Q"}),"https://mp.weixin.qq.com/s/0IkKgthJdnC_UorZGS5Z0Q"),") "),(0,m.kt)("p",null,"[2][原文链接]","(",(0,m.kt)("a",oe({parentName:"p"},{href:"https://blog.csdn.net/yujing1314/article/details/107000737"}),"https://blog.csdn.net/yujing1314/article/details/107000737"),")"))}function ce(){return(ce=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function me(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}se.isMDXComponent=!0;var ue={};function de(e){var t=e.components,n=me(e,["components"]);return(0,m.kt)("wrapper",ce({},ue,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"react 工作原理"),(0,m.kt)("h2",null,"Virtual DOM(虚拟DOM)"),(0,m.kt)("h3",null,"what?"),(0,m.kt)("p",null,"用JavaScript对象表示DOM信息和结构，当状态变更的时候，重新渲染这个JavaScript的对象架构，这个JavaScript对象称为Virtual DOM."),(0,m.kt)("h3",null,"why?"),(0,m.kt)("p",null,"DOM操作很慢（why ? 因为每个dom都有很多属性，如果直接对dom diff，会diff所有属性,成本太高，而对vdom diff，则可以根据我们的需要进行diff），轻微的操作都可能导致页面的重新排版，非常耗性能，相对于DOM对象，js对象处理起来更快，而且更简单。通过diff算法对比新旧vdom之间的差异，可以批量的、最小化的执行dom操作，从而提高性能。"),(0,m.kt)("h3",null,"where?"),(0,m.kt)("h2",null,"React.createElement(...)"),(0,m.kt)("h3",null,"什么时候执行？"),(0,m.kt)("p",null,"经过babel-loader编译，会调用React.createElement()"))}function ke(){return(ke=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function fe(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}de.isMDXComponent=!0;var Ne={};function he(e){var t=e.components,n=fe(e,["components"]);return(0,m.kt)("wrapper",ke({},Ne,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"在原生JavaScript中创建不可变对象"),(0,m.kt)("p",null,(0,m.kt)("a",ke({parentName:"p"},{href:"https://www.jstips.co/en/javascript/creating-immutable-objects-in-native-javascript/"}),"译文连接")),(0,m.kt)("p",null,"JavaScript是一种灵活的语言，你可以重新定义任何内容。但是，当项目变得复杂时，我们会发现可变数据结构存在问题。当我们使用最新版本的JavaScript，这个问题就会变得不一样了。因为现在，我们能创建不可变的对象。我将会通过三种不同的方式一步一步的告诉你怎么去完成操作。"),(0,m.kt)("h2",null,"等等，什么是不可变？"),(0,m.kt)("p",null,(0,m.kt)("em",{parentName:"p"},"对象的不可变性意味着一旦创建好这个对象，就不希望它发生任何改变，也就是让它变成只读类型"),"。"),(0,m.kt)("p",null,"假设我们需要定义一个",(0,m.kt)("inlineCode",{parentName:"p"},"car"),"对象，并在整个项目中使用它的属性去执行操作。我们不允许错误的更改任何数据。"),(0,m.kt)("pre",null,(0,m.kt)("code",ke({parentName:"pre"},{className:"language-js"}),"const myTesla = {\n    maxSeepd: 155,\n    batteryLife: 300,\n    weight: 2300\n};\n")),(0,m.kt)("h2",null,"Object.preventExtensions()"),(0,m.kt)("p",null,"此方法可防止向现有对象添加新属性。",(0,m.kt)("inlineCode",{parentName:"p"},"preventExtensions()")," （防止扩展）是不可逆操作。我们将永远不能向这个对象添加额外的属性。"),(0,m.kt)("pre",null,(0,m.kt)("code",ke({parentName:"pre"},{className:"language-js"}),"Object.isExtensible(myTesla); //true\nObject.preventExtensions(myTesla);\nObject.isExtensible(myTesla); //false\nmyTesla.color = 'blue';\nconsole.log(myTesla.color); //undefined\n")),(0,m.kt)("h2",null,"Object.seal()"),(0,m.kt)("p",null,"此方法防止添加或删除属性。",(0,m.kt)("inlineCode",{parentName:"p"},"seal()")," （密封）也防止属性描述符修改。"),(0,m.kt)("pre",null,(0,m.kt)("code",ke({parentName:"pre"},{className:"language-js"}),"Object.isSealed(myTesla); // false\nObject.seal(myTesla);\nObject.isSealed(myTesla); // true\n\nmyTesla.color = 'blue';\nconsole.log(myTesla.color); // undefined\n\ndelete myTesla.batteryLife; // false\nconsole.log(myTesla.batteryLife); // 300\n\nObject.defineProperty(myTesla, 'batteryLife'); // TypeError: Cannot redefine property: batteryLife\n")),(0,m.kt)("h2",null,"Object.freeze()"),(0,m.kt)("p",null,"此方法与",(0,m.kt)("inlineCode",{parentName:"p"},"Object.seal()")," 使属性不可写相同。"),(0,m.kt)("pre",null,(0,m.kt)("code",ke({parentName:"pre"},{className:"language-js"}),"Object.isFrozen(myTesla); // false\nObject.freeze(myTesla);\nObject.isFrozen(myTesla); // true\n\nmyTesla.color = 'blue';\nconsole.log(myTesla.color); // undefined\n\ndelete myTesla.batteryLife;\nconsole.log(myTesla.batteryLife); // 300\n\nObject.defineProperty(myTesla, 'batteryLife'); // TypeError: Cannot redefine property: batteryLife\n\nmyTesla.batteryLife = 400;\nconsole.log(myTesla.batteryLife); // 300\n")),(0,m.kt)("h2",null,"补充"),(0,m.kt)("p",null,"在",(0,m.kt)("inlineCode",{parentName:"p"},"strict mode")," （严格模式）下，当你尝试去更改一个不可变对象时，它将会抛出错误。"))}function ge(){return(ge=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function be(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}he.isMDXComponent=!0;var ye={};function ve(e){var t=e.components,n=be(e,["components"]);return(0,m.kt)("wrapper",ge({},ye,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",null,"ubuntu 20.4 扩容"),(0,m.kt)("ul",null,(0,m.kt)("li",{parentName:"ul"},"之前由于使用推荐内存（",(0,m.kt)("inlineCode",{parentName:"li"},"20G"),"）导致安装一系列",(0,m.kt)("inlineCode",{parentName:"li"},"docker"),"项目后，内存被占满。无法开机，也无法构建",(0,m.kt)("inlineCode",{parentName:"li"},"docker"),"项目，只能选择扩容"),(0,m.kt)("li",{parentName:"ul"},"扩容之前，清除掉所有快照后再备分快照（有快照无法点击扩容），再点击扩容。"),(0,m.kt)("li",{parentName:"ul"},"开机"),(0,m.kt)("li",{parentName:"ul"},"等待黑屏不动后，按住",(0,m.kt)("inlineCode",{parentName:"li"},"Ctrl + Alt F3")," 进入命令行终端（可能还有其他方式进入）"),(0,m.kt)("li",{parentName:"ul"},"删除可以删除的文件等，（",(0,m.kt)("a",ge({parentName:"li"},{href:"https://blog.csdn.net/qq_37294163/article/details/106468619"}),"有博客说可以删除",(0,m.kt)("inlineCode",{parentName:"a"},"log"))," , ",(0,m.kt)("a",ge({parentName:"li"},{href:"https://blog.csdn.net/jack_incredible/article/details/6655072"}),"还有删除缓存包的")," ，都可以尝试一下)，反正我都没有成功， 最后选择删除",(0,m.kt)("inlineCode",{parentName:"li"},"docker"),"构建时生成的无用镜像：",(0,m.kt)("ul",{parentName:"li"},(0,m.kt)("li",{parentName:"ul"},"列出所有本地镜像 ",(0,m.kt)("inlineCode",{parentName:"li"},"docker images")),(0,m.kt)("li",{parentName:"ul"},"删除无用镜像",(0,m.kt)("inlineCode",{parentName:"li"},"docker system prune -a")," (谨慎删除，具体后果不知)"))),(0,m.kt)("li",{parentName:"ul"},"删除后可以用",(0,m.kt)("inlineCode",{parentName:"li"},"df -HT"),"查看内存信息"),(0,m.kt)("li",{parentName:"ul"},"重启"),(0,m.kt)("li",{parentName:"ul"},"开机成功，进入桌面，安装gparted: ",(0,m.kt)("inlineCode",{parentName:"li"},"sudo apt-get install gparted")," , 启动工具： ",(0,m.kt)("inlineCode",{parentName:"li"},"sudo gparted")," "),(0,m.kt)("li",{parentName:"ul"},"分别右键",(0,m.kt)("inlineCode",{parentName:"li"},"/dev/sda2"),"和",(0,m.kt)("inlineCode",{parentName:"li"},"/dev/sda5")," （可能每个人的都不一样），点击",(0,m.kt)("inlineCode",{parentName:"li"},"Resize/Move")," ，拉满内存。执行操作"),(0,m.kt)("li",{parentName:"ul"},"OK, 搞定，可以",(0,m.kt)("inlineCode",{parentName:"li"},"df -HT")," 查看一下结果")),(0,m.kt)("h2",null,"参考"),(0,m.kt)("p",null,"[1][Ubuntu20.04扩容教程]","(",(0,m.kt)("a",ge({parentName:"p"},{href:"https://blog.csdn.net/bb_iot/article/details/107869131?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduend~default-3-107869131.nonecase&utm_term=ubuntu20%E6%89%A9%E5%AE%B9&spm=1000.2123.3001.4430"}),"https://blog.csdn.net/bb_iot/article/details/107869131?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduend~default-3-107869131.nonecase&utm_term=ubuntu20%E6%89%A9%E5%AE%B9&spm=1000.2123.3001.4430"),") "))}ve.isMDXComponent=!0;var Oe=n(6288),xe=(0,r.forwardRef)((function(e,t){var n=e.navbarClassName;return r.createElement("div",{className:"navbar"},r.createElement(Oe.Z,{offsetTop:0},r.createElement("div",{className:"navbar-items ".concat(n),ref:t},r.createElement("div",{className:"navbar-logo"},r.createElement(s.rU,{to:"/"},"yanxiaolazy")),r.createElement("div",{className:"navbar-link-list"},r.createElement("div",null,"about"),r.createElement("div",null,"blog"),r.createElement("div",null,"index"),r.createElement("div",null,"resume")))))}));xe.defaultProps={navbarClassName:"navbar-fixed"};const Ce=xe,Ee=function(){var e=(0,o.$B)(),t=a[e.params.details];return r.createElement("div",{className:"blog-layout"},r.createElement(Ce,null),r.createElement("div",{className:"markdown bloglayout"},r.createElement(i.Z,null,t&&r.createElement(t,null))))};var we=n(3860);function je(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,l=void 0;try{for(var o,i=e[Symbol.iterator]();!(a=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){r=!0,l=e}finally{try{a||null==i.return||i.return()}finally{if(r)throw l}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Se(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Se(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Se(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function De(e){var t=e.children,n=je((0,r.useState)(""),2),a=n[0],l=n[1],o=(0,r.useRef)(null),i=(0,r.useRef)(null);return(0,r.useEffect)((function(){function e(){var e,t;(null===(e=i.current)||void 0===e?void 0:e.offsetHeight)&&(null===(t=o.current)||void 0===t?void 0:t.offsetHeight)&&document.documentElement.scrollTop+i.current.offsetHeight>=o.current.offsetHeight?l("navbar-fixed"):l("")}return e(),window.addEventListener("scroll",e),function(){console.log("unmount `HomeLayout` component"),window.removeEventListener("scroll",e)}}),[]),r.createElement("div",{className:"home"},r.createElement("div",{className:"home-background",ref:o},r.createElement(Ce,{navbarClassName:a,ref:i}),r.createElement("div",{className:"home-info-container"},r.createElement("div",{className:"home-info"},r.createElement("div",null,"Life is full of joy"),r.createElement("div",{className:"home-info-author"},"---  yanxiaolazy")))),r.createElement("div",{className:"home-content"},t))}function Me(){var e=Object.keys(a);return r.createElement(De,null,e.map((function(e){var t=a[e];return r.createElement(Pe,{key:e.toString(),component:r.createElement(t,null),path:"/blog/".concat(encodeURIComponent(e.toString()))})})))}function Pe(e){var t=e.component,n=e.path,a=je((0,r.useState)(!0),2),l=a[0],p=a[1],s=(0,r.useRef)(null),c=(0,o.k6)();return(0,r.useEffect)((function(){var e;function t(){p(!1)}return null===(e=s.current)||void 0===e||e.addEventListener("load",t),function(){var e;console.log("unmount `ShowCard` component"),null===(e=s.current)||void 0===e||e.removeEventListener("load",t)}}),[]),r.createElement(i.Z,{hoverable:!0,cover:r.createElement("img",{src:"https://picsum.photos/350/430?random=".concat(Math.floor(100*Math.random())+1),ref:s}),onClick:function(e){c.push(n)}},r.createElement(we.Z,{loading:l,active:!0,paragraph:{rows:7},round:!0,title:!0},r.createElement(i.Z.Meta,{description:t})))}const Te=function(){return r.createElement(o.F0,{history:qe},r.createElement(o.rs,null,r.createElement(o.AW,{exact:!0,path:"/",component:Me}),r.createElement(o.AW,{exact:!0,path:"/index",component:c}),r.createElement(o.AW,{exact:!0,path:"/blog/:details",component:Ee}),r.createElement(o.AW,{component:Le})))};var qe=(0,p.q_)();function Le(){return r.createElement("div",null,r.createElement(i.Z,null,"You seem to be lost."))}(0,l.render)(r.createElement(r.StrictMode,null,r.createElement(r.Fragment,null,r.createElement(Te,null))),document.getElementById("root"))}},t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={exports:{}};return e[a].call(r.exports,r,r.exports,n),r.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={189:0},t=[[9092,62,570,431,101]],a=()=>{};function r(){for(var a,r=0;r<t.length;r++){for(var l=t[r],o=!0,i=1;i<l.length;i++){var p=l[i];0!==e[p]&&(o=!1)}o&&(t.splice(r--,1),a=n(n.s=l[0]))}return 0===t.length&&(n.x(),n.x=()=>{}),a}n.x=()=>{n.x=()=>{},o=o.slice();for(var e=0;e<o.length;e++)l(o[e]);return(a=r)()};var l=r=>{for(var l,o,[p,s,c,m]=r,u=0,d=[];u<p.length;u++)o=p[u],n.o(e,o)&&e[o]&&d.push(e[o][0]),e[o]=0;for(l in s)n.o(s,l)&&(n.m[l]=s[l]);for(c&&c(n),i(r);d.length;)d.shift()();return m&&t.push.apply(t,m),a()},o=self.webpackChunkyanxiaolazy_github_io=self.webpackChunkyanxiaolazy_github_io||[],i=o.push.bind(o);o.push=l})(),n.x()})();